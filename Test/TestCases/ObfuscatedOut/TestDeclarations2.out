unit testdeclarations2;

interface

type
  tfred = class;

  tfred2 = class
  end;

  iarthur = interface;
  iart2   = interface
  end;

  tjezebel = class of tfred;

  tfred = class(TObject)
  public
    procedure narf;
  private
    fifred: integer;
  end;

  iarthur = interface(IUnknown)
    procedure fred; safecall;
  end;

implementation

type
  tnorman = class(TObject)
  private
    finorman: integer;
  protected
    procedure readfred(const pcfred: tfred); virtual; safecall;
  public
    constructor Create;
  end;

procedure tfred.narf;
begin
  fifred := 0;
end;

constructor tnorman.Create;
begin
  inherited;
  finorman := 0;
end;

procedure tnorman.readfred(const pcfred: tfred);
begin
  if pcfred = nil then
    finorman := 0
  else
    finorman := pcfred.fifred;
end;

procedure fooble;
var
  lcnorm: tnorman;
begin
  lcnorm := tnorman.Create;
  try
    lcnorm.readfred(nil);
  finally
    lcnorm.Free;
  end;
end;

end.
 