unit testexclusion;{(*}  {*)}

interface

implementation

uses SysUtils;

function fred: string;
begin
  Result := IntToStr(random(20));
end;
{(*}
function Fred2: string;
function GetARandomNumber: integer;
begin
Result := Random (20);
end;
begin
Result := IntToStr (GetARandomNumber);
end;

function Fred3: string;

function GetARandomNumber: integer;

function GetLimit: integer;
begin
Result := 20;
end;
{ can format again }{*)}begin
    Result := random(getlimit);
  end;

begin
  Result := IntToStr(getarandomnumber);
end;

procedure jim3(var ps1: string; const ps2: string);
var
  ls3: string;
begin
  ls3 := fred;
{(*} if ps1 = '' then ls3 := 'Fred' else ls3 := 'NotFred'; {*)}
end;

procedure jim4(var ps1: string; const ps2: string);
var
  ls3: string;
begin
  ls3 := fred;//jcf:format=off
  if ps1 = '' then ls3 := 'Fred' else ls3 := 'NotFred';
  //jcf:all=on
end;

procedure jim5(var ps1: string; const ps2: string);
var
  ls3: string;
begin
  ls3 := fred;//jcf:format=off
  if ps1 = '' then ls3 := 'Fred' else ls3 := 'NotFred';
  //jcf:format=on
end;

end.
 